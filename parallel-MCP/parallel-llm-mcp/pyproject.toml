[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "parallel-llm-mcp"
version = "0.1.0"
description = "MCP server for parallel LLM ensemble calls with synthesis"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Generated", email = "noreply@example.com"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.8"
dependencies = [
    "fastmcp>=0.1.0",
    "httpx>=0.25.0",
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/example/parallel-llm-mcp"
Repository = "https://github.com/example/parallel-llm-mcp"
Issues = "https://github.com/example/parallel-llm-mcp/issues"

[project.scripts]
parallel-llm-mcp = "parallel_llm_mcp.__main__:main_sync"

[tool.hatch.build.targets.wheel]
packages = ["src/parallel_llm_mcp"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]